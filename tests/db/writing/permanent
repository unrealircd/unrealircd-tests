#!/usr/bin/python3
import irctestframework.irctest

m = irctestframework.irctest.IrcTest()
c1a = m.new('c1a')
c2a = m.new('c2a')
c3a = m.new('c3a')
m.connect()

chan = "#permanent_test"
m.send(c1a, "JOIN " + chan)
m.expect(c1a, "user in channel", ":c1a.*JOIN")
print

m.send(c1a, "MODE " + chan + " +P")
m.expect(c1a, "cannot set +P if not IRCOp", "481.*IRC operator")
m.not_expect(c2a, "no MODE +P if not IRCOp", ":c1a.*MODE.*\+P")
m.clearlog()
print

m.send(c1a, "OPER netadmin test")
m.send(c1a, "MODE " + chan + " +PT")
m.send(c1a, "MODE " + chan + " +beI ban!*@* exempt!*@* invex!*@*")
m.expect(c1a, "MODE +PT", "MODE.*\+PT")
m.expect(c1a, "MODE +beI", "MODE.*\+beI")
m.clearlog()
print

m.send(c1a, "PART " + chan)
m.join_all(chan, creator=c2a)
m.send_all("MODE " + chan)
m.send_all("MODE " + chan + " b")
m.send_all("MODE " + chan + " e")
m.send_all("MODE " + chan + " I")
m.expect_all("MODE +TP should be set after rejoin", "324.*\+PT")
m.expect_all("ban should be set after rejoin", "367.*ban!")
m.expect_all("exempts should be set after rejoin", "348.*exempt!")
m.expect_all("invexes should be set after rejoin", "346.*invex!")
