#!/usr/bin/python
import irctestframework.irctest
import base64

m = irctestframework.irctest.IrcTest()
c2a = m.new('c2a')
c2a.disable_registration = 1
m.sync = 0
m.connect()

m.send(c2a, "CAP LS 302")
m.send(c2a, "USER username x x :Test framework")
m.send(c2a, "NICK client2")
m.send(c2a, "CAP REQ :message-tags account-tag")
m.send(c2a, "CAP REQ :sasl")
m.expect(c2a, "SASL CAP available and enabled", ":.+ CAP .* ACK :sasl", timeout = 10)
m.clearlog()
print

m.send(c2a, "AUTHENTICATE PLAIN")
m.expect(c2a, "AUTHENTICATE plain go ahead", "AUTHENTICATE \+", timeout = 10)
m.clearlog()
print

# Now, authenticate
auth_string = base64.b64encode(b'client2\000client2\000test')
m.send(c2a, "AUTHENTICATE " + auth_string)
m.expect(c2a, "SASL authentication successful", ":.+ 903 .* :SASL authentication successful", timeout = 10)
m.clearlog()
print

m.send(c2a, "CAP END")
m.expect(c2a, "Numeric 001 RPL_WELCOME", ":irc.* 001 client2 .*", timeout=10)
m.expect(c2a, "Client should receive modes", ":client2 MODE client2 .*", timeout=10)
m.expect(c2a, "NickServ sets +r", ":NickServ MODE client2 :\+r", timeout=5)
m.not_expect(c2a, "", "This nickname is registered")
m.clearlog()

m.sync = 1
m.send(c2a, "WHOIS client2")
m.expect(c2a, "Show account in WHOIS", ":.+ 330 client2 client2 client2 :is logged in as")
m.clearlog()
print
