#!/usr/bin/python
import irctestframework.irctest
import time

# Here we test the HISTORY command
# Note that these are tests are more loose, as we do more proper
# testing of things in tests/chanmodes/history

m = irctestframework.irctest.IrcTest()
c1a = m.new('c1a')
c1b = m.new('c1b')
c2a = m.new('c2a')
c3a = m.new('c3a')
c3b = m.new('c3b')
m.connect()

m.send_all("CAP REQ server-time")
m.send(c3a, "CAP REQ batch")
print

chan = m.randchan()
m.send(c2a, "JOIN " + chan) # first user with ops
m.send(c1a, "JOIN " + chan)
m.expect(c1a, "users in channel", "JOIN")
m.clearlog()
print

# Set history channel mode: save 20 lines for 5 minutes
m.send(c2a, "MODE " + chan + " +SGH 20:5")
m.expect(c1a, "MODE +H", ":c2a.*MODE.*\+GSH 20:5")
m.clearlog()
print

# Send 1+15 messages, the last one is normally wrapped in on-join playback
# but is still visible via the HISTORY command playback.
m.send(c1a, "PRIVMSG " + chan + " :should be wrapped in on-join playback")
m.send(c1a, "PRIVMSG " + chan + " :one")
m.send(c1a, "PRIVMSG " + chan + " :\0034red two\003") # will be stripped
m.send(c1a, "PRIVMSG " + chan + " :three")
m.send(c1a, "PRIVMSG " + chan + " :four")
m.send(c1a, "PRIVMSG " + chan + " :five")
m.send(c2a, "PRIVMSG " + chan + " :six")
m.send(c2a, "PRIVMSG " + chan + " :seven")
m.send(c2a, "PRIVMSG " + chan + " :eight")
m.send(c2a, "PRIVMSG " + chan + " :nine fuck") # will be stripped
m.send(c2a, "PRIVMSG " + chan + " :ten")
m.send(c2a, "PRIVMSG " + chan + " :eleven")
m.send(c2a, "PRIVMSG " + chan + " :twelve")
m.send(c2a, "PRIVMSG " + chan + " :thirteen")
m.send(c2a, "PRIVMSG " + chan + " :fourteen")
m.send(c2a, "PRIVMSG " + chan + " :fifteen")
m.expect(c2a, "Message with stripped color", "PRIVMSG .*:red two")
m.not_expect(c1a, "Message with censored message", "PRIVMSG.*nine fuck")
m.clearlog()
print

# Expect a parameter:
m.send(c1b, "HISTORY")
m.expect(c1b, "Usage information if no parameter provided", "Use:")
m.clearlog()
print

# Should not be able to retrieve history without joining:
m.send(c1b, "HISTORY " + chan)
m.expect(c1b, "History not allowed if not in channel", ":.* 442 $me " + chan)
m.clearlog()
print

m.send(c1b, "JOIN " + chan)
# this one should not show up in on-join (15 line limit), only in HISTORY #chan request
m.not_expect(c1b, "history playback: should NOT see on-join-wrapped message (message zero)", "PRIVMSG.*should be wrapped")
m.clearlog()
print

m.send(c1b, "HISTORY " + chan)
m.expect(c1b, "history playback: 1st message", ":c1a.* PRIVMSG .* :one")
m.expect(c1b, "history playback: 2nd message should have colors stripped", ":c1a.* PRIVMSG .* :red two")
m.expect(c1b, "history playback: 9th message is altered", ":c2a.* PRIVMSG.*nine <censored>")
m.expect(c1b, "history playback: 10th message", ":c2a.* PRIVMSG .* :ten")
m.expect(c1b, "history playback: should see on-join-wrapped message (message zero)", "PRIVMSG.*should be wrapped")
m.not_expect(c1b, "playback should not see a BATCH if not supported", ".*BATCH.*")
m.clearlog()
print

m.send(c2a, "PRIVMSG " + chan + " :sixteen")
m.send(c2a, "PRIVMSG " + chan + " :seventeen")
m.send(c2a, "PRIVMSG " + chan + " :eighteen")
m.send(c2a, "PRIVMSG " + chan + " :nineteen")
m.send(c2a, "PRIVMSG " + chan + " :twenty")
m.clearlog()
print

m.send(c1b, "HISTORY " + chan)
m.expect(c1b, "history playback: 1st message", ":c1a.* PRIVMSG .* :one")
m.expect(c1b, "history playback: 2nd message should have colors stripped", ":c1a.* PRIVMSG .* :red two")
m.expect(c1b, "history playback: 9th message is altered", ":c2a.* PRIVMSG.*nine <censored>")
m.expect(c1b, "history playback: 10th message", ":c2a.* PRIVMSG .* :ten")
m.not_expect(c1b, "history playback: should NOT see now wrapped message (message zero)", "PRIVMSG.*should be wrapped")
m.clearlog()
print
