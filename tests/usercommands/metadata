#!/usr/bin/python3
import irctestframework.irctest

m = irctestframework.irctest.IrcTest()
c1a = m.new('c1a')
c2a = m.new('c2a')
c3a = m.new('c3a')
m.connect()

# user metadata

m.send(c1a, "METADATA * SET test1 :test1 value")
m.send(c1a, "METADATA * SET test2 :test2 value")
m.expect(c1a, "receive numeric 761", ":.+ 761 $me $me test1 \* :test1 value")
m.expect(c1a, "receive numeric 761", ":.+ 761 $me $me test2 \* :test2 value")
m.clearlog()
print

m.send(c1a, "METADATA * SET test1 :another value")
m.expect(c1a, "receive numeric 761", ":.+ 761 $me $me test1 \* :another value")
m.clearlog()
print

m.send_all("METADATA $c1a LIST")
m.expect_all("receive METADATA (761)", ":.+ 761 $me $c1a test1 \* :another value")
m.expect_all("receive METADATA (761)", ":.+ 761 $me $c1a test2 \* :test2 value")
m.clearlog()
print

m.send(c1a, "METADATA * SET test1")
m.expect(c1a, "receive empty METADATA (761)", ":.+ 761 $me $me test1 \* :$")
m.clearlog()
print

m.send_all("METADATA $c1a LIST")
m.not_expect_all("do not receive METADATA (761) test1", ":.+ 761 $me $c1a test1")
m.expect_all("receive METADATA (761) test2", ":.+ 761 $me $c1a test2 \* :test2 value")
m.clearlog()
print

m.send(c3a, "METADATA * SUB test1 test2")
m.expect(c3a, "receive METADATA subscription (770) for test1", ":.+ 770 $me :test1")
m.expect(c3a, "receive METADATA subscription (770) for test2", ":.+ 770 $me :test2")
m.expect(c3a, "receive METADATA notification for test2", ":.+ METADATA $c1a test2 \* :test2 value")
m.clearlog()
print

m.send(c2a, "METADATA * SET test1 :test1 value")
m.send(c1a, "METADATA * SET test2 :")
m.expect(c3a, "receive METADATA notification for test1", ":.+ METADATA $c2a test1 \* :test1 value")
m.expect(c3a, "receive METADATA notification for test2 deletion", ":.+ METADATA $c1a test2 \*$")
m.clearlog()
print

# channel metadata

chan = m.randchan()
m.join_all(chan, creator = c1a, skip = c3a)
m.expect(c1a, "first user in channel", ":c1a.*JOIN")
m.expect(c2a, "second user in channel", ":c2a.*JOIN")
m.clearlog()
print

m.send(c2a, "METADATA * SUB test3")
m.send(c3a, "METADATA * SUB test3")
m.send(c1a, "METADATA " + chan + " SET test3 :channel metadata")
m.expect(c1a, "receive numeric 761", ":.+ 761 $me " + chan + " test3 \* :channel metadata")
m.expect(c2a, "receive METADATA notification for test3", ":.+ METADATA " + chan + " test3 \* :channel metadata")
m.clearlog()
print

m.send(c3a, "JOIN " + chan)
m.expect(c3a, "receive METADATA notification for test3", ":.+ METADATA " + chan + " test3 \* :channel metadata")
m.clearlog()
print

