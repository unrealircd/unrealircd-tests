#!/usr/bin/python
import irctestframework.irctest

m = irctestframework.irctest.IrcTest()
c1a = m.new('c1a')
c2a = m.new('c2a')
c3a = m.new('c3a')
m.connect()

chan = m.randchan()
m.join_all(chan, skip = c1a)
m.expect(c2a, "users in channel", "JOIN")
print

m.send(c1a, "CAP REQ :draft/labeled-response batch server-time")
m.expect(c1a, "CAP ACK for labeled-response and other capabilities", ":.* CAP c1a.* ACK :draft/labeled-response batch server-time");
m.clearlog()
print

m.send(c1a, "@draft/label=aaa NOTICE " + chan + " :hello")
m.expect(c1a, "ACK message for zero response", "@draft/label=aaa.* :.* ACK")
m.not_expect(c1a, "No BATCH start or end for zero response", " BATCH ")
m.clearlog()
print

m.send(c1a, "@draft/label=bbb ISON $c1a")
m.expect(c1a, "Single line response with label", "@draft/label=bbb.*303.*c1a.* :c1a.*")
m.not_expect(c1a, "No BATCH start or end for single response", " BATCH ")
m.clearlog()
print

m.send(c1a, "@draft/label=ccc JOIN " + chan)
m.expect(c1a, "BATCH start for multiline response", "@draft/label=ccc.*BATCH \+.*labeled-response")
m.expect(c1a, "Multiple lines within the match", "@batch=")
m.expect(c1a, "BATCH end", "BATCH -.*")
m.clearlog()
print

# This sends the JOIN again. Since we are already in the channel
# the IRC server should not send any reply and not do any action.
# We do expect an ACK back though, due to labeled-response...
#
# We need this additional test in addition to the 1st one because
# PRIVMSG was slightly special, so best to test with JOIN too..
m.send(c1a, "@draft/label=ddd JOIN " + chan)
m.expect(c1a, "ACK message for zero response", "@draft/label=ddd.* :.* ACK")
m.not_expect(c1a, "No BATCH start or end for zero response", " BATCH ")
m.clearlog()
print

# Finally, we should obey not to do labeled-response for the echo-message stuff.
m.send(c1a, "CAP REQ :echo-message")
m.send(c1a, "@draft/label=eee NOTICE $c1a :hello")
m.expect(c1a, "One PRIVMSG with the label", "@draft/label=eee.* :.* NOTICE.* :hello")
m.expect(c1a, "The other PRIVMSG without the label", ":.* NOTICE.* :hello")
m.not_expect(c1a, "No BATCH start or end for single response", " BATCH ")
m.clearlog()
print
